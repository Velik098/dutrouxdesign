const express = require("express");
const path = require("path");
const { Telegraf } = require("telegraf");

const app = express();
const PORT = process.env.PORT || 3000;

// ---------------- Telegram Bot ----------------
const BOT_TOKEN = process.env.BOT_TOKEN;
if (!BOT_TOKEN) {
  console.error("‚ùå BOT_TOKEN is missing!");
  process.exit(1);
}

const bot = new Telegraf(BOT_TOKEN);

// URL —Ç–≤–æ–µ–≥–æ –º–∏–Ω–∏-–∞–ø–ø–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Render/Vercel URL)
const WEBAPP_URL = process.env.PUBLIC_URL || "https://dutrouxdesign.onrender.com";

// –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
bot.start((ctx) => {
  ctx.reply(
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–û—Ç–∫—Ä—ã—Ç—å WebApp", web_app: { url: WEBAPP_URL } }],
        ],
      },
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
bot.on("message", async (ctx) => {
  if (ctx.message?.web_app_data?.data) {
    try {
      const data = JSON.parse(ctx.message.web_app_data.data);
      console.log("üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:", data);

      await ctx.reply(
        ‚úÖ –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!\n–°—Ç–∏–ª—å: ${data.style}\n–§–æ—Ç–æ: [base64 —Å–∫—Ä—ã—Ç]
      );

      // TODO: —Ç—É—Ç –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err.message);
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö!");
    }
  }
});

// ---------------- Express -------------------
app.use(express.static(__dirname));

app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "index.html"));
});

// ---------------- –ó–∞–ø—É—Å–∫ -------------------
app.listen(PORT, () => {
  console.log(`üåê Server running on http://localhost:${PORT}`);

  bot.launch()
    .then(() => console.log("ü§ñ Bot started"))
    .catch((err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", err.message));
});
